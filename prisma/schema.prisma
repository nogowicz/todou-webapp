generator client {
  provider = "prisma-client-js"
  engineType = "binary"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model invitation {
  id        Int       @id @default(autoincrement())
  code      String    @unique
  listId    Int
  inviterId Int
  expiresAt DateTime
  createdAt DateTime? 
  list      list      @relation(fields: [listId], references: [listId])
  user      user      @relation(fields: [inviterId], references: [userId])

  @@index([inviterId])
  @@index([listId])
}

model list {
  listId       Int          @id @default(autoincrement())
  listName     String
  iconId       Int          @default(0)
  canBeDeleted Boolean?     @default(true)
  isShared     Boolean?     @default(false)
  createdAt    DateTime?    
  updatedAt    DateTime?    
  isFavorite   Boolean?     @default(false)
  isArchived   Boolean?     @default(false)
  createdBy    Int?         @default(-1)
  colorVariant Int          @default(0)
  invitation   invitation[]
  task         task[]
  user         user[]
  userlist     userlist[]
}

model subtask {
  subtaskId   Int       @id @default(autoincrement())
  title       String
  taskId      Int
  isCompleted Boolean?  @default(false)
  addedBy     String
  createdAt   DateTime? 
  updatedAt   DateTime? 
  task        task      @relation(fields: [taskId], references: [taskId])

  @@index([taskId])
}

model task {
  taskId           Int              @id @default(autoincrement())
  title            String
  listId           Int
  isCompleted      Boolean?         @default(false)
  deadline         DateTime?
  importance       String?          @default("Not important")
  urgency          String?          @default("Not urgent")
  note             String?
  addedBy          Int
  assignedTo       Int
  createdAt        DateTime?        
  updatedAt        DateTime?        
  notificationTime DateTime?
  subtask          subtask[]
  list             list             @relation(fields: [listId], references: [listId])

  @@index([listId])
}

model user {
  userId        Int          @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String       @unique
  password      String
  photoURL      String?
  idDefaultList Int
  createdAt     DateTime
  updatedAt     DateTime?
  isVerified    Boolean      @default(false)
  invitation    invitation[]
  list          list         @relation(fields: [idDefaultList], references: [listId])
  userlist      userlist[]

  @@index([idDefaultList])
}

model userlist {
  listId Int
  userId Int
  list   list @relation(fields: [listId], references: [listId])
  user   user @relation(fields: [userId], references: [userId])

  @@id([listId, userId])
  @@unique([listId, userId])
  @@index([userId])
}

model session {
  id        Int      @id @default(autoincrement())
  userId    Int
  expiresAt DateTime

  @@index([userId])
}
